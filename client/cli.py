#!/usr/bin/env python

import gnupg
import uuid
import base64
import socket
import sys
import argparse
import threading


def _print_myid(gpg):
    print "Addresses which can be decrypted:"
    for key in gpg.list_keys(True):
        print key["keyid"], key["uids"]


def _print_chums(gpg):
    print "Addresses which can be sent to:"
    for key in gpg.list_keys(False):
        print key["keyid"], key["uids"]


def _connect():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(("firehose.shishnet.org", 9988))
    return s


def main_send(gpg, s):
    targets = raw_input("Send to whom? > ").split(",")
    while True:
        data = raw_input("Send to %s> " % ",".join(targets))
        data = gpg.encrypt(data, targets, sign=gpg.list_keys(True)[0]["keyid"], passphrase="firehose", always_trust=True)
        s.sendall(base64.b64encode(str(data.data)))


def main_recv(gpg, s):
    while True:
        data = s.recv(4096)
        if not data:
            break
        try:
            data = gpg.decrypt(base64.b64decode(data), passphrase="firehose")
            if data:
                target = data.username or "Unknown"
                print "%s: %s" % (target, data)
        except Exception as e:
            print "Error decoding: %r (%r)" % (data, e)


def main_register(gpg):
    print "Generating a key, this may take a while"
    input_data = gpg.gen_key_input(key_type="RSA", key_length=1024, name_real=uuid.uuid1(), name_comment="Generated by firehose", name_email="nobody@example.com", passphrase="firehose")
    gpg.gen_key(input_data)
    print "Key generated; now run in chat mode"


def main(args=sys.argv):
    if len(sys.argv) != 2:
        print "Usage: %s [register/chat]" % sys.argv[0]
        return 1

    gpg = gnupg.GPG()  # gnupghome="./gpg/", verbose=False)

    if sys.argv[1] == "register":
        main_register(gpg)

    if sys.argv[1] == "chat":
        _print_myid(gpg)
        _print_chums(gpg)

        s = _connect()
        recv = threading.Thread(target=main_recv, args=(gpg, s))
        recv.daemon = True
        recv.start()
        main_send(gpg, s)


if __name__ == "__main__":
    sys.exit(main(sys.argv))

